// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Office.Data;

#nullable disable

namespace Office.Migrations
{
    [DbContext(typeof(OfficeDbContext))]
    partial class OfficeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Office.Service.Audience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AudienceNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("BuildingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CathedraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeaneryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Equipment")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherPhone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CathedraId");

                    b.HasIndex("DeaneryId");

                    b.ToTable("Audience");
                });

            modelBuilder.Entity("Office.Service.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumberOfFloors")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearBuilt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("Office.Service.Cathedra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CathedraName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeaneryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Head")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadPhone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeaneryId");

                    b.ToTable("Cathedra");
                });

            modelBuilder.Entity("Office.Service.Deanery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dean")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeanEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeanPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeaneryName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Deanery");
                });

            modelBuilder.Entity("Office.Service.Audience", b =>
                {
                    b.HasOne("Office.Service.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Office.Service.Cathedra", "Cathedra")
                        .WithMany()
                        .HasForeignKey("CathedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Office.Service.Deanery", "Deanery")
                        .WithMany()
                        .HasForeignKey("DeaneryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("Cathedra");

                    b.Navigation("Deanery");
                });

            modelBuilder.Entity("Office.Service.Cathedra", b =>
                {
                    b.HasOne("Office.Service.Deanery", "Deanery")
                        .WithMany()
                        .HasForeignKey("DeaneryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deanery");
                });
#pragma warning restore 612, 618
        }
    }
}
